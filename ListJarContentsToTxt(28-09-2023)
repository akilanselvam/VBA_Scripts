import java.io.*;
import java.util.jar.*;
import java.util.Enumeration;

public class ListJarContentsToTxt {
    public static void main(String[] args) {
        String sourcePath = "D:\\SPRING\\spring\\src\\main\\java";
        String destinationPath = "D:\\SPRING\\spring\\src\\main\\java";

        File sourceDir = new File(sourcePath);
        File destinationDir = new File(destinationPath);

        if (!sourceDir.isDirectory() || !destinationDir.isDirectory()) {
            System.err.println("Both source and destination paths should be directories.");
            System.exit(1);
        }

        File[] jarFiles = sourceDir.listFiles((dir, name) -> name.endsWith(".jar"));

        if (jarFiles == null || jarFiles.length == 0) {
            System.err.println("No JAR files found in the source directory.");
            System.exit(1);
        }
        try {
            for (File jarFile : jarFiles) {
                listJarContents(jarFile, destinationDir);
            }

            System.out.println("Listing complete.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    private static void listJarContents(File jarFile, File destinationDir) throws IOException {
        String jarFileName = jarFile.getName();
        String txtFileName = jarFileName.substring(0, jarFileName.lastIndexOf('.')) + ".txt";
        File txtFile = new File(destinationDir, txtFileName);

        try (JarFile jar = new JarFile(jarFile);
             BufferedWriter writer = new BufferedWriter(new FileWriter(txtFile))) {

            Enumeration<JarEntry> entries = jar.entries();

            while (entries.hasMoreElements()) {
                JarEntry entry = entries.nextElement();
                if (!entry.isDirectory()) {
                    String entryPath = entry.getName();
                    writer.write(entryPath);
                    writer.newLine();
                }
                if (entry.getName().endsWith(".jar")) {
                    // Nested JAR file found, list its contents recursively
                    writer.write("Nested JAR file: " + entry.getName());
                    writer.newLine();
                    File nestedJarFile = new File(destinationDir, entry.getName());
                    try (InputStream is = jar.getInputStream(entry);
                         OutputStream os = new FileOutputStream(nestedJarFile)) {
                        byte[] buffer = new byte[1024];
                        int bytesRead;
                        while ((bytesRead = is.read(buffer)) != -1) {
                            os.write(buffer, 0, bytesRead);
                        }
                    }
                    listJarContents(nestedJarFile, destinationDir);
                }
            }
        }
    }
}
