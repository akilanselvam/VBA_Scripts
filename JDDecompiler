import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

public class JDDecompiler {

    public static void main(String[] args) {
        // Example usage
        String classFilePath = "path/to/YourClass.class";
        String outputFilePath = "path/to/output/YourClass.java";

        try {
            decompileClassFile(classFilePath, outputFilePath);
        } catch (IOException e) {
            System.out.println("Error during decompilation: " + e.getMessage());
        }
    }

    public static void decompileClassFile(String classFilePath, String outputFilePath) throws IOException {
        // Path to jd-cli executable
        String jdCliPath = "path/to/jd-cli/jd-cli.jar";

        // Prepare the command to invoke JD-CLI decompiler
        String command = "java -jar " + jdCliPath + " " + classFilePath + " -od " + new File(outputFilePath).getParent();

        // Execute the command to decompile the .class file
        Process process = Runtime.getRuntime().exec(command);

        try {
            // Wait for the decompilation process to complete
            process.waitFor();

            // Rename or move the decompiled file from the output folder
            String outputClassName = new File(classFilePath).getName().replace(".class", ".java");
            Files.move(Paths.get(new File(outputFilePath).getParent(), outputClassName), Paths.get(outputFilePath));

            System.out.println("Decompilation complete. Decompiled file: " + outputFilePath);
        } catch (InterruptedException e) {
            System.out.println("Decompilation process was interrupted: " + e.getMessage());
        }
    }
}
